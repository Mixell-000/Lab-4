import java.util.*;
import java.io.*;

class Paciente{
       private String Nombre;
       private String Apellido;
       private String Id;
       private int Categoria;
       private long TiempoLlegada;
       private String Estado;
       private String Area;
       private Stack<String> HistorialCambios;

       Paciente(String Nombre,String Apellido,String Id,int Categoria,long TiempoLlegada,String Estado,String Area,Stack<String> HistorialCambios) {
       this.Nombre = Nombre;
       this.Apellido = Apellido;
       this.Id = Id;
       this.Categoria = Categoria;
       this.TiempoLlegada = TiempoLlegada;
       this.Estado = Estado;
       this.Area = Area;
       this.HistorialCambios = HistorialCambios;
       }

       public void SetNombre (String NewNombre) {
       Nombre = NewNombre;
       }
       public void SetApellido (String NewApellido) {
       Apellido = NewApellido;
       }
       public void SetId (String NewId) {
       Id = NewId;
       }
       public void SetCategoria (int NewCategoria) {
       Categoria = NewCategoria;
       }
       public void SetTiempoLlegada (long NewTiempoLlegada) {
       TiempoLlegada = NewTiempoLlegada;
       }
       public void SetEstado (String NewEstado) {
       Estado = NewEstado;
       }
       public void SetArea (String NewArea) {
       Area = NewArea;
       }
       public void SetHistorialCambios (Stack<String> NewHistorialCambios) {
       HistorialCambios = NewHistorialCambios;
       }

       public String GetNombre() {
       return Nombre;
       }
       public String GetApellido() {
       return Apellido;
       }
       public String GetId() {
       return Id;
       }
       public int GetCategoria() {
       return Categoria;
       }
       public long GetTiempoLlegada() {
       return TiempoLlegada;
       }
       public String GetEstado() {
       return Estado;
       }
       public String GetArea() {
       return Area;
       }
       public Stack<String> GetHistorialCambios() {
       return HistorialCambios;
       }
       
       public long tiempoEsperaActual(){
           long tiempoActual = System.currentTimeMillis() / 1000L;
           long diferenciaTiempo = tiempoActual - TiempoLlegada;
           return diferenciaTiempo/60;
       }
       public void registrarCambio(String descripcion){
            HistorialCambios.push(descripcion + " / / / " + new Date().toString());
       }
       public String obtenerUltimoCambio(){
           if(HistorialCambios.isEmpty() == false){
               return HistorialCambios.pop();
           }
           else{return "No hay cambios.";}
           
       }
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       

       public void Printcosos() {
       System.out.println("Nombre : " + Nombre);
       System.out.println("Apellido : " + Apellido);
       System.out.println("Id : " + Id);
       System.out.println("Categoria : " + Categoria);
       System.out.println("TiempoLlegada : " + TiempoLlegada);
       System.out.println("Estado : " + Estado);
       System.out.println("Area : " + Area);
       System.out.println("HistorialCambios : " + HistorialCambios);
       }};

class AreaAtencion{
       private String Nombre;
       private PriorityQueue<Paciente> PacientesHeap;
       private int CapacidadMaxima;

       AreaAtencion(String Nombre,PriorityQueue<Paciente> PacientesHeap,int CapacidadMaxima) {
       this.Nombre = Nombre;
       this.PacientesHeap = PacientesHeap;
       this.CapacidadMaxima = CapacidadMaxima;
       }

       public void SetNombre (String NewNombre) {
       Nombre = NewNombre;
       }
       public void SetPacientesHeap (PriorityQueue<Paciente> NewPacientesHeap) {
       PacientesHeap = NewPacientesHeap;
       }
       public void SetCapacidadMaxima (int NewCapacidadMaxima) {
       CapacidadMaxima = NewCapacidadMaxima;
       }

       public String GetNombre() {
       return Nombre;
       }
       public PriorityQueue<Paciente> GetPacientesHeap() {
       return PacientesHeap;
       }
       public int GetCapacidadMaxima() {
       return CapacidadMaxima;
       }
       
       public void ingresarPaciente(Paciente p){
           
       }
       public Paciente atenderPaciente(){
           
       }
       public boolean estaSaturada(){
           
       }
       public List<Paciente>obtenerPacientesPorHeapSort(){
           
       }
       
       

       public void Printcosos() {
       System.out.println("Nombre : " + Nombre);
       System.out.println("PacientesHeap : " + PacientesHeap);
       System.out.println("CapacidadMaxima : " + CapacidadMaxima);
       }};
       
class Hospital{
    private Map<String, Paciente> pacientesTotales;
    private PriorityQueue<Paciente> colaAtencion;
    private Map<String, AreaAtencion> areasAtencion;
    private List<Paciente> pacientesAtendidos;
    
     Hospital(Map<String, Paciente> PacientesTotales,
             PriorityQueue<Paciente> ColaAtencion,
             Map<String, AreaAtencion> AreasAtencion,
             List<Paciente> PacientesAtendidos) {
        this.PacientesTotales = PacientesTotales;
        this.ColaAtencion = ColaAtencion;
        this.AreasAtencion = AreasAtencion;
        this.PacientesAtendidos = PacientesAtendidos;
    }
    
     public void SetPacientesTotales(Map<String, Paciente> nuevosPacientes) {
        PacientesTotales = nuevosPacientes;
    }

    public void SetColaAtencion(PriorityQueue<Paciente> nuevaCola) {
        ColaAtencion = nuevaCola;
    }

    public void SetAreasAtencion(Map<String, AreaAtencion> nuevasAreas) {
        AreasAtencion = nuevasAreas;
    }

    public void SetPacientesAtendidos(List<Paciente> nuevosAtendidos) {
        PacientesAtendidos = nuevosAtendidos;
    }

    public Map<String, Paciente> GetPacientesTotales() {
        return PacientesTotales;
    }

    public PriorityQueue<Paciente> GetColaAtencion() {
        return ColaAtencion;
    }

    public Map<String, AreaAtencion> GetAreasAtencion() {
        return AreasAtencion;
    }

    public List<Paciente> GetPacientesAtendidos() {
        return PacientesAtendidos;
    }

    public void Printcosos() {
        System.out.println("PacientesTotales: " + PacientesTotales.keySet());
        System.out.println("ColaAtencion: " + ColaAtencion);
        System.out.println("AreasAtencion: " + AreasAtencion.keySet());
        System.out.println("PacientesAtendidos: " + PacientesAtendidos.size());
    }
    
    
    public Void registrarPaciente(Paciente p){
        
    }
    public void reasignarCategoria(String id , int nuevaCategoria){
        
    }
    public Paciente atenderSiguiente(){
        
    }
    public List<Paciente>obtenerPacientesPorCategoria(int categoria){
        
    }
    public AreaAtencion obtenerArea(String nombre){
        
    }
    
    
    
    
    
    
}
